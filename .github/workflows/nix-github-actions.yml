name: Nix Flake actions

on:
  pull_request:
  push:
    branches:
      - master
      - main

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          echo "matrix=$(nix eval --json '.#githubActions.matrix')" >> "$GITHUB_OUTPUT"

  nix-build:
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: mkdir -p ~/.config/nix && echo "system-features = kvm nixos-test" >> ~/.config/nix/nix.conf
      - run: nix build -L ".#${{ matrix.attr }}"

  # Check gomod2nix up to date
  gomod2nix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v15
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: gomod2nix
      run: nix develop -c ./checks/gomod2nix

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v15
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: golangci-lint
      run: nix develop -c ./checks/golangci-lint

  collect:
    runs-on: ubuntu-latest
    needs:
      - nix-build
      - gomod2nix
      - golangci-lint
    steps:
      - run: exit 0
