// Copyright Â© 2020-2022 The Trustix Authors
//
// SPDX-License-Identifier: GPL-3.0-only

// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file api.proto (package reprod_api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AttrReproducibilityTimeSeriesGroupedbyChannelRequest, AttrReproducibilityTimeSeriesGroupedbyChannelResponse, AttrReproducibilityTimeSeriesRequest, AttrReproducibilityTimeSeriesResponse, DerivationReproducibilityRequest, DerivationReproducibilityResponse, DiffRequest, DiffResponse, SuggestAttributeResponse, SuggestsAttributeRequest } from "./api_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service reprod_api.v1.ReproducibilityAPI
 */
export const ReproducibilityAPI = {
  typeName: "reprod_api.v1.ReproducibilityAPI",
  methods: {
    /**
     * @generated from rpc reprod_api.v1.ReproducibilityAPI.DerivationReproducibility
     */
    derivationReproducibility: {
      name: "DerivationReproducibility",
      I: DerivationReproducibilityRequest,
      O: DerivationReproducibilityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc reprod_api.v1.ReproducibilityAPI.AttrReproducibilityTimeSeries
     */
    attrReproducibilityTimeSeries: {
      name: "AttrReproducibilityTimeSeries",
      I: AttrReproducibilityTimeSeriesRequest,
      O: AttrReproducibilityTimeSeriesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc reprod_api.v1.ReproducibilityAPI.AttrReproducibilityTimeSeriesGroupedbyChannel
     */
    attrReproducibilityTimeSeriesGroupedbyChannel: {
      name: "AttrReproducibilityTimeSeriesGroupedbyChannel",
      I: AttrReproducibilityTimeSeriesGroupedbyChannelRequest,
      O: AttrReproducibilityTimeSeriesGroupedbyChannelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc reprod_api.v1.ReproducibilityAPI.SuggestAttribute
     */
    suggestAttribute: {
      name: "SuggestAttribute",
      I: SuggestsAttributeRequest,
      O: SuggestAttributeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc reprod_api.v1.ReproducibilityAPI.Diff
     */
    diff: {
      name: "Diff",
      I: DiffRequest,
      O: DiffResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

